const {
  speak,
  shuffle,
  setFeedback,
  updateProgress,
  wait,
  initSpeechWarmup,
} = window.GameUtils;

const targetLetter = document.getElementById('target-letter');
const currentWordEl = document.getElementById('current-word');
const playButton = document.getElementById('play-word');
const startButton = document.getElementById('btn-start');
const endButton = document.getElementById('btn-end');
const feedback = document.getElementById('feedback');
const progress = document.getElementById('progress');

initSpeechWarmup();

const dataset = shuffle([
  { sound: '–ê', word: '–∞–∏—Å—Ç' },
  { sound: '–ê', word: '—Ä—É–∫–∞' },
  { sound: '–û', word: '–æ—Å—ã' },
  { sound: '–û', word: '–æ—Å–ª–∏–∫' },
  { sound: '–£', word: '—É—Ç–∫–∞' },
  { sound: '–£', word: '—É–ª–µ–π' },
  { sound: '–ò', word: '–∏–≤–∞' },
  { sound: '–ò', word: '–ø–Ω–∏' },
  { sound: '–ú', word: '–¥–æ–º' },
  { sound: '–ú', word: '–º–∞–∫' },
  { sound: '–ë', word: '–±—ã–∫' },
  { sound: '–ë', word: '–±–∞–∫' },
  { sound: '–¢', word: '–∫–æ—Ç' },
  { sound: '–¢', word: '—Ä–æ—Ç' },
  { sound: '–î', word: '–¥—É–±' },
  { sound: '–î', word: '–¥–æ–º' },
  { sound: '–ö', word: '–±—ã–∫' },
  { sound: '–ö', word: '—Ä–∞–∫' },
  { sound: '–ì', word: '–≥—É—Å—å' },
  { sound: '–ì', word: '–≥–æ–ª' },
  { sound: '–ü', word: '–ø–∞—Ä' },
  { sound: '–ü', word: '—Å—É–ø' },
  { sound: '–í', word: '–≤–æ–ª–∫' },
  { sound: '–í', word: '–≤–æ—Å–∫' },
  { sound: '–ñ', word: '–∂—É–∫' },
  { sound: '–ñ', word: '–∂–∞—Ä' },
  { sound: '–ó', word: '–∑—É–±' },
  { sound: '–ó', word: '–∑–æ–Ω—Ç' },
  { sound: '–ù', word: '–Ω–æ—Å' },
  { sound: '–ù', word: '—Å–æ–Ω' },
  { sound: '–†', word: '—Ä–∞–∫' },
  { sound: '–†', word: '–ø–∞—Ä' },
  { sound: '–®', word: '—à–∞—Ä' },
  { sound: '–®', word: '—à—É–º' },
  { sound: '–ß', word: '—á–∞–π' },
  { sound: '–ß', word: '–º—è—á' },
]);

let currentIndex = 0;
let score = 0;

function showRound() {
  if (currentIndex >= dataset.length) {
    finishGame();
    return;
  }
  const { sound, word } = dataset[currentIndex];
  targetLetter.textContent = sound;
  currentWordEl.textContent = word.charAt(0).toUpperCase() + word.slice(1);
  updateProgress(progress, currentIndex + 1, dataset.length);
  setFeedback(feedback, '–ì–¥–µ —Å–ª—ã—à–∏—Ç—Å—è –∑–≤—É–∫? –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –≤ –Ω–∞—á–∞–ª–µ –∏–ª–∏ –≤ –∫–æ–Ω—Ü–µ —Å–ª–æ–≤–∞.', 'info');
  playWord();
}

function determinePosition(sound, word) {
  const soundLower = sound.toLowerCase();
  const normalizedWord = word.toLowerCase();
  const atStart = normalizedWord.startsWith(soundLower);
  const atEnd = normalizedWord.endsWith(soundLower);
  if (atStart && !atEnd) return 'start';
  if (!atStart && atEnd) return 'end';
  if (atStart && atEnd) return 'start';
  // –ï—Å–ª–∏ –∑–≤—É–∫ –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ, —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –ø–æ –±–ª–∏–∑–æ—Å—Ç–∏
  return atStart ? 'start' : 'end';
}

async function handleAnswer(position) {
  const { sound, word } = dataset[currentIndex];
  const correctPosition = determinePosition(sound, word);
  const isCorrect = position === correctPosition;
  if (isCorrect) {
    score += 1;
    setFeedback(feedback, '–û—Ç–ª–∏—á–Ω–æ! –í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏–ª–∏ –º–µ—Å—Ç–æ –∑–≤—É–∫–∞.', 'success');
    currentIndex += 1;
    await wait(1200);
    showRound();
  } else {
    setFeedback(feedback, '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. –ì–¥–µ –∑–≤—É—á–∏—Ç —ç—Ç–æ—Ç –∑–≤—É–∫?', 'error');
  }
}

function playWord() {
  const { word } = dataset[currentIndex];
  speak(word, { rate: 1.05 });
}

function finishGame() {
  setFeedback(feedback, `–ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞! –í–µ—Ä–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${score} –∏–∑ ${dataset.length}.`, 'success');
  updateProgress(progress, dataset.length, dataset.length);
  playButton.textContent = 'üîÅ –°—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞';
}

startButton.addEventListener('click', () => handleAnswer('start'));
endButton.addEventListener('click', () => handleAnswer('end'));

playButton.addEventListener('click', () => {
  if (currentIndex >= dataset.length) {
    restartGame();
  } else {
    playWord();
  }
});

function restartGame() {
  currentIndex = 0;
  score = 0;
  const reshuffled = shuffle(dataset);
  dataset.splice(0, dataset.length, ...reshuffled);
  playButton.textContent = '‚ñ∂Ô∏è –ü—Ä–æ–∏–≥—Ä–∞—Ç—å —Å–ª–æ–≤–æ';
  showRound();
}

showRound();
