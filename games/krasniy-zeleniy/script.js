// –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –≤—Å–µ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Å –¥—Ä—É–≥–∏–º–∏ –∏–≥—Ä–∞–º–∏
function initKrasniyZeleniy() {
    // --- 1. –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –ò–ì–†–´ ---
    // –ú–∞—Å—Å–∏–≤ —Å –∑–∞–¥–∞–Ω–∏—è–º–∏. –í –±—É–¥—É—â–µ–º –µ–≥–æ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–≥—Ä—É–∂–∞—Ç—å —Å —Å–µ—Ä–≤–µ—Ä–∞.
    const gameData = [
        {
            word: '–ë–∞–Ω–∞–Ω',
            icon: 'üçå',
            image: 'assets/images/krasniy-zeleniy/banan.png',
            sequence: ['–∫–∞–±–∞–Ω','–Ω–∞–≥–∞–Ω','–±–∞–Ω–∞–Ω','–ª–∞–¥–∞–Ω','–±–∞–Ω–∞–Ω','–Ω–∞–±–∞–Ω','–±–∞–Ω–∞–Ω','–∫–∞–∑–∞–Ω']
        },
        {
            word: '–ë—É–¥–∫–∞',
            icon: 'üè†',
            image: 'assets/images/krasniy-zeleniy/budka.png',
            sequence: ['–±—É–¥–∫–∞','–¥—É–¥–∫–∞','—É—Ç–∫–∞','–±—É–¥–∫–∞','–±—É–∫–≤–∞','–±—É–¥–∫–∞','–∫—É—Ä—Ç–∫–∞','–±—É–¥–∫–∞']
        },
        {
            word: '–ü–∞–Ω–∞–º–∞',
            icon: 'üëí',
            image: 'assets/images/krasniy-zeleniy/panama.png',
            sequence: ['—Ñ–∞–Ω–∞–º–∞','–∫–∞—Ç–∞–º–∞','–ø–∞–Ω–∞–º–∞','—Ç–æ–º–∞–Ω–∞','—Å–∞–º–∞–Ω–∞','–≤–∞–¥–∞–º–∞','–ø–∞–Ω–∞–º–∞','–Ω–∞–ø–∞–º–∞']
        }
    ];

    // --- 2. –ü–ï–†–ï–ú–ï–ù–ù–´–ï –°–û–°–¢–û–Ø–ù–ò–Ø –ò–ì–†–´ ---
    let currentRoundIndex = 0;
    let shuffledData = [];
    let isCorrectPronunciation = false;
    let lastSpoken = '';
    let isGameActive = false; // –û—Ç–≤–µ—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –¥–æ –Ω–∞–∂–∞—Ç–∏—è ¬´–°–ª—É—à–∞—Ç—å¬ª
    let score = 0;
    let currentAudio = null;

    // --- 3. –ü–û–õ–£–ß–ï–ù–ò–ï –≠–õ–ï–ú–ï–ù–¢–û–í DOM ---
    const imageContainer = document.getElementById('gz-image-container');
    const itemWord = document.querySelector('.item-word');
    const itemImage = document.getElementById('gz-item-image');
    const itemLabel = document.getElementById('gz-item-label');
    const correctButton = document.getElementById('gz-button-correct');
    const incorrectButton = document.getElementById('gz-button-incorrect');
    const listenButton = document.getElementById('gz-listen');
    const feedbackElement = document.getElementById('gz-feedback');

    const audioMap = {
        '–±–∞–Ω–∞–Ω': 'banan',
        '–∫–∞–±–∞–Ω': 'kaban',
        '–Ω–∞–≥–∞–Ω': 'nagan',
        '–ª–∞–¥–∞–Ω': 'ladan',
        '–Ω–∞–±–∞–Ω': 'naban',
        '–∫–∞–∑–∞–Ω': 'kazan',
        '–±—É–¥–∫–∞': 'budka',
        '–¥—É–¥–∫–∞': 'dudka',
        '—É—Ç–∫–∞': 'utka',
        '–±—É–∫–≤–∞': 'bukva',
        '–∫—É—Ä—Ç–∫–∞': 'kurtka',
        '–ø–∞–Ω–∞–º–∞': 'panama',
        '—Ñ–∞–Ω–∞–º–∞': 'fanama',
        '–∫–∞—Ç–∞–º–∞': 'katana',
        '—Ç–æ–º–∞–Ω–∞': 'tomana',
        '—Å–∞–º–∞–Ω–∞': 'sanama',
        '–≤–∞–¥–∞–º–∞': 'vadama',
        '–Ω–∞–ø–∞–º–∞': 'napama'
    };

    function stopAudio(){
        if(currentAudio){
            currentAudio.pause();
            currentAudio.currentTime = 0;
            currentAudio = null;
        }
    }

    function playPronunciation(word){
        stopAudio();
        const key = audioMap[word.toLowerCase()];
        if(key){
            const audio = new Audio(`assets/audio/krasniy-zeleniy/${key}.mp3`);
            currentAudio = audio;
            audio.play().catch(()=>{
                if(window.Voice){ window.Voice.speak(word); }
            });
        } else if(window.Voice){
            window.Voice.speak(word);
        }
    }

    // --- 4. –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò ---

    /**
     * –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ—Ç –º–∞—Å—Å–∏–≤ –≤ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ (–∞–ª–≥–æ—Ä–∏—Ç–º –§–∏—à–µ—Ä–∞-–ô–µ—Ç—Å–∞)
     * @param {Array} array - –ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤
     * @returns {Array} - –ü–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤
     */
    function shuffleArray(array) {
        const newArray = [...array];
        for (let i = newArray.length - 1; i > 0; i--) {
            const j = Math.floor(Math.random() * (i + 1));
            [newArray[i], newArray[j]] = [newArray[j], newArray[i]];
        }
        return newArray;
    }

    /**
     * –ó–∞–ø—É—Å–∫–∞–µ—Ç –Ω–æ–≤—ã–π —Ä–∞—É–Ω–¥ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É
     */
    function startRound() {
        if(window.UI) window.UI.clearToasts();
        stopAudio();
        // –ï—Å–ª–∏ —Ä–∞—É–Ω–¥—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –∑–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É
        if (currentRoundIndex >= shuffledData.length) {
            endGame();
            return;
        }

        isGameActive = false;
        // –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π
        imageContainer.classList.remove('show');

        // –ñ–¥–µ–º, –ø–æ–∫–∞ –∞–Ω–∏–º–∞—Ü–∏—è —Å–∫—Ä—ã—Ç–∏—è –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è
        setTimeout(() => {
            const roundData = shuffledData[currentRoundIndex];
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏–ª–∏ fallback-–∏–∫–æ–Ω–∫—É
            if(roundData.image){
                itemWord.classList.remove('no-image');
                itemWord.classList.add('has-image');
                itemImage.src = roundData.image;
                itemImage.alt = roundData.word;
                itemLabel.textContent = '';
            } else {
                itemWord.classList.remove('has-image');
                itemWord.classList.add('no-image');
                itemImage.removeAttribute('src');
                itemLabel.textContent = roundData.icon || roundData.word;
            }

            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É
            imageContainer.classList.add('show');

            // –ñ–¥—ë–º –Ω–∞–∂–∞—Ç–∏—è ¬´–°–ª—É—à–∞—Ç—å¬ª, –Ω–∏—á–µ–≥–æ –Ω–µ –ø—Ä–æ–∏–∑–Ω–æ—Å–∏–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
            isCorrectPronunciation = false;
            lastSpoken = '';

        }, 500); // –¥–æ–ª–∂–Ω–æ —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å transition –≤ CSS
    }

    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param {boolean} wasCorrectPressed - –ù–∞–∂–∞—Ç–∞ –ª–∏ "–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è" –∫–Ω–æ–ø–∫–∞ (–∑–µ–ª–µ–Ω–æ–µ —è–±–ª–æ–∫–æ)
     */
    function handleAnswer(wasCorrectPressed) {
        if (!isGameActive) return; // –ù—É–∂–Ω–æ —Å–Ω–∞—á–∞–ª–∞ –Ω–∞–∂–∞—Ç—å ¬´–°–ª—É—à–∞—Ç—å¬ª
        isGameActive = false; // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞ –≤—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏

        // –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å: –µ—Å–ª–∏ –∑–µ–ª–µ–Ω–∞—è –∏ –ø—Ä–æ–∏–∑–Ω–µ—Å–µ–Ω–æ –∏–º–µ–Ω–Ω–æ —Ü–µ–ª–µ–≤–æ–µ —Å–ª–æ–≤–æ –∏–∑ –∫–∞—Ä—Ç–æ—á–∫–∏
        // –û–ø—Ä–µ–¥–µ–ª–∏–º –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É utterance, –∫–æ—Ç–æ—Ä–æ–µ –º—ã –ø—Ä–æ–∏–∑–Ω–µ—Å–ª–∏: –º—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏ spoken –≤ –∑–∞–º—ã–∫–∞–Ω–∏–∏? –£–ø—Ä–æ—Å—Ç–∏–º: —Å—á–∏—Ç–∞–µ–º,
        // —á—Ç–æ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —Ä–∞–≤–Ω–∞ 50%, –∫–∞–∫ —Ä–∞–Ω—å—à–µ.
        const isPlayerRight = (wasCorrectPressed === isCorrectPronunciation);

        if (isPlayerRight) {
            score++;
            if(window.UI){ UI.toast('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!', 'success'); UI.celebrate(); }
            else { showFeedback('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!', 'correct'); }
            // –ü–æ–¥–ø—Ä—ã–≥–∏–≤–∞–µ—Ç –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–∞—è –∫–Ω–æ–ø–∫–∞
            incorrectButton.classList.add('hop');
        } else {
            if(window.UI){ UI.toast('–ù–µ–≤–µ—Ä–Ω–æ', 'error'); }
            else { showFeedback('–ù–µ–≤–µ—Ä–Ω–æ', 'incorrect'); }
            correctButton.classList.add('hop');
        }

        // –£–±–∏—Ä–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ —Å –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ –∏—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        setTimeout(() => {
            correctButton.classList.remove('hop');
            incorrectButton.classList.remove('hop');
        }, 500);

        // –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ä–∞—É–Ω–¥—É
        currentRoundIndex++;
        setTimeout(startRound, 2000); // –ü–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ä–∞—É–Ω–¥–æ–º
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å
     * @param {string} text - –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     * @param {string} type - 'correct' –∏–ª–∏ 'incorrect' –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
     */
    function showFeedback(text, type) {
        feedbackElement.textContent = text;
        feedbackElement.className = `feedback-area show ${type}`;
        setTimeout(() => {
            feedbackElement.classList.remove('show');
        }, 1500);
    }

    /**
     * –ó–∞–≤–µ—Ä—à–∞–µ—Ç –∏–≥—Ä—É
     */
    function resetGame(){
        currentRoundIndex = 0;
        score = 0;
        shuffledData = shuffleArray(gameData);
        startRound();
    }

    function endGame() {
        imageContainer.classList.remove('show');
        stopAudio();
        if(window.UI){
            UI.result({
                title:'–ú–æ–ª–æ–¥–µ—Ü!',
                score,
                total: shuffledData.length,
                onReplay: resetGame,
                onClose: resetGame
            });
        }
        else { showFeedback('–ú–æ–ª–æ–¥–µ—Ü!', 'correct'); }
    }

    // --- 5. –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò–ì–†–´ ---

    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ—Ä—è–¥–∫–∞
    shuffledData = shuffleArray(gameData);

    // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
    correctButton.addEventListener('click', () => handleAnswer(true));
    incorrectButton.addEventListener('click', () => handleAnswer(false));
    listenButton.addEventListener('click', () => {
        const roundData = shuffledData[currentRoundIndex];
        const seq = roundData.sequence;
        const spoken = seq[Math.floor(Math.random()*seq.length)];
        lastSpoken = spoken;
        isCorrectPronunciation = (spoken.toLowerCase() === roundData.word.toLowerCase());
        isGameActive = true;
        playPronunciation(spoken);
    });

    // –ì–æ—Ç–æ–≤–∏–º –ø–µ—Ä–≤—ã–π —Ä–∞—É–Ω–¥ (–±–µ–∑ –∞–≤—Ç–æ–æ–∑–≤—É—á–∫–∏)
    startRound();
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å—é –ª–æ–≥–∏–∫—É, –∫–æ–≥–¥–∞ DOM –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤
// (–≠—Ç–æ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å —Å –≤–∞—à–∏–º –≥–ª–∞–≤–Ω—ã–º –∑–∞–≥—Ä—É–∑—á–∏–∫–æ–º –∏–≥—Ä)
// document.addEventListener('DOMContentLoaded', initKrasniyZeleniy);

// –î–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å –≤–∞—à–∏–º main.js, –≤—ã –±—É–¥–µ—Ç–µ –≤—ã–∑—ã–≤–∞—Ç—å initKrasniyZeleniy()
// –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ HTML –∏ CSS —ç—Ç–æ–π –∏–≥—Ä—ã.
