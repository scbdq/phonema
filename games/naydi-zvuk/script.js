function initNaydiZvuk(){
  const sets={
    '–ê':['–ê–Ω—è','–∫–æ—Ç','—Ä—É–∫–∞','–±—ã–∫','–∞–∏—Å—Ç','—â–µ–∫–∞'],
    '–û':['–û–ª—è','–º–∞–∫','–æ—Å—ã','–¥–Ω–æ','—É—Ç–∫–∞','–ø–µ—Ä–æ'],
    '–£':['—É—Ö–æ','—Å–æ–∫','—É–ª–µ–π','–º–∞–∫','—É—Ç–∫–∞'],
    '–¢':['–∫–æ—Ç','—Ä–æ—Ç','—Å–æ–∫','–∫—Ä–æ—Ç','–±—ã–∫','–¥–æ–º'],
    '–ö':['–ø–∞—É–∫','—Å—É–ø','–º–∞–∫','—Ä–æ—Ç','–∫–æ—Ç'],
    '–°':['—Å–æ–º','–¥–æ–º','–Ω–æ—Å','–∫–æ—Ç','—Å—ã—Ä'],
    '–ú':['–º–∞–∫','–ª—É–∫','–¥–æ–º','–Ω–æ—Å','—Å–æ–º']
  };
  const icons={ '–ê–Ω—è':'üëß','–∫–æ—Ç':'üê±','—Ä—É–∫–∞':'‚úã','–±—ã–∫':'üêÇ','–∞–∏—Å—Ç':'üïäÔ∏è','—â–µ–∫–∞':'üôÇ','–û–ª—è':'üëß','–º–∞–∫':'üå∫','–æ—Å—ã':'üêù','–¥–Ω–æ':'üï≥Ô∏è','—É—Ç–∫–∞':'ü¶Ü','–ø–µ—Ä–æ':'ü™∂','—É—Ö–æ':'üëÇ','—Å–æ–∫':'ü•§','—É–ª–µ–π':'üêù','–∫—Ä–æ—Ç':'ü¶´','–¥–æ–º':'üè†','–ø–∞—É–∫':'üï∑Ô∏è','—Å—É–ø':'üç≤','—Ä–æ—Ç':'üëÑ','–∫–æ—Ç':'üê±','—Å–æ–º':'üêü','–Ω–æ—Å':'üëÉ','—Å—ã—Ä':'üßÄ','–ª—É–∫':'üßÖ'};
  const grid=document.getElementById('nz-grid');
  const targetEl=document.getElementById('nz-target');
  const feedback=document.getElementById('nz-feedback');
  const next=document.getElementById('nz-next');
  let target='–ê'; let used=[];
  const speak=t=> window.Voice ? window.Voice.speak(t) : ( ()=>{ try{window.speechSynthesis.cancel(); const u=new SpeechSynthesisUtterance(t); u.lang='ru-RU'; window.speechSynthesis.speak(u);}catch(e){} } )();
  function render(){ grid.innerHTML=''; const arr=sets[target]; arr.forEach(w=>{ const el=document.createElement('div'); el.className='nz-card'; el.dataset.word=w; el.textContent=icons[w]||'üîπ'; const b=document.createElement('button'); b.className='btn btn-blue nz-listen'; b.textContent='–°–ª—É—à–∞—Ç—å'; b.addEventListener('click',e=>{ e.stopPropagation(); speak(w); }); el.appendChild(b); el.addEventListener('click',()=>choose(w, el)); grid.appendChild(el); }); feedback.textContent=''; }
  function choose(w, el){ const ok = w.toLowerCase().includes(target.toLowerCase()); el.style.outline = ok? '4px solid #10b981' : '4px solid #ef4444'; feedback.textContent = ok? '–ï—Å—Ç—å –∑–≤—É–∫ '+target : '–ù–µ—Ç –∑–≤—É–∫–∞ '+target; feedback.style.color= ok? '#065f46':'#7f1d1d'; }
  function change(){ const keys=Object.keys(sets); target = keys[(keys.indexOf(target)+1)%keys.length]; targetEl.textContent=target; render(); }
  next.addEventListener('click',change);
  render();
}
